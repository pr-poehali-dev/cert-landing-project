import { useState, useEffect, useRef } from 'react'
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog"
import { Label } from "@/components/ui/label"
import Icon from "@/components/ui/icon"

const Index = () => {
  const [showChat, setShowChat] = useState(false)
  const [chatMessage, setChatMessage] = useState('')
  const [visibleStats, setVisibleStats] = useState<boolean[]>([false, false, false])
  const statsRef = useRef<HTMLDivElement>(null)
  const [currentReview, setCurrentReview] = useState(0)

  // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—á–µ—Ç—á–∏–∫
  const useCountUp = (end: number, duration: number = 2000, isVisible: boolean = false) => {
    const [count, setCount] = useState(0)
    
    useEffect(() => {
      if (!isVisible) return
      
      let startTime: number
      const startValue = 0
      
      const animate = (currentTime: number) => {
        if (!startTime) startTime = currentTime
        const progress = Math.min((currentTime - startTime) / duration, 1)
        
        const easeOutQuart = 1 - Math.pow(1 - progress, 4)
        setCount(Math.floor(startValue + (end - startValue) * easeOutQuart))
        
        if (progress < 1) {
          requestAnimationFrame(animate)
        }
      }
      
      requestAnimationFrame(animate)
    }, [end, duration, isVisible])
    
    return count
  }
  const [showCalculator, setShowCalculator] = useState(false)
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    description: ''
  })
  const [calculatorData, setCalculatorData] = useState({
    documentType: '',
    productCategory: '',
    quantity: '',
    urgency: ''
  })
  const [calculatedPrice, setCalculatedPrice] = useState<number | null>(null)

  // Intersection Observer –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setVisibleStats([true, true, true])
          }
        })
      },
      { threshold: 0.3 }
    )

    if (statsRef.current) {
      observer.observe(statsRef.current)
    }

    return () => observer.disconnect()
  }, [])

  // Animation on scroll
  const observerRef = useRef<IntersectionObserver>()

  // Telegram Bot integration
  const sendToTelegram = () => {
    const docTypeNames = {
      'cert-tr-ts': '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¢–† –¢–°',
      'declaration-tr-ts': '–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –¢–† –¢–°', 
      'cert-gost': '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ì–û–°–¢ –†',
      'protocol': '–ü—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø—ã—Ç–∞–Ω–∏–π'
    }
    
    const categoryNames = {
      'food': '–ü–∏—â–µ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
      'electronics': '–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞',
      'textile': '–¢–µ–∫—Å—Ç–∏–ª—å',
      'toys': '–ò–≥—Ä—É—à–∫–∏',
      'construction': '–°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã'
    }
    
    const urgencyNames = {
      '1-day': '1 –¥–µ–Ω—å',
      '3-days': '3 –¥–Ω—è', 
      '7-days': '7 –¥–Ω–µ–π',
      '14-days': '14 –¥–Ω–µ–π'
    }

    const message = `üßÆ –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

üìã –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${docTypeNames[calculatorData.documentType as keyof typeof docTypeNames]}
üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryNames[calculatorData.productCategory as keyof typeof categoryNames]}  
‚è∞ –°—Ä–æ—á–Ω–æ—Å—Ç—å: ${urgencyNames[calculatorData.urgency as keyof typeof urgencyNames]}
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: ${calculatedPrice?.toLocaleString()} ‚ÇΩ

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏!`

    const telegramUrl = `https://t.me/SertEcoPromBot?start=${encodeURIComponent(message)}`
    window.open(telegramUrl, '_blank')
  }
  
  useEffect(() => {
    observerRef.current = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-fade-in-up')
          }
        })
      },
      { threshold: 0.1 }
    )

    const elements = document.querySelectorAll('.scroll-animate')
    elements.forEach((el) => observerRef.current?.observe(el))

    return () => observerRef.current?.disconnect()
  }, [])

  const handleFormSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // Simulate form submission
    alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.')
    setFormData({ name: '', phone: '', email: '', description: '' })
  }

  const calculatePrice = () => {
    if (!calculatorData.documentType || !calculatorData.productCategory) return

    const basePrices = {
      'cert-tr-ts': 15000,
      'declaration-tr-ts': 8000,
      'cert-gost': 12000,
      'protocol': 5000
    }

    const categoryMultipliers = {
      'food': 1.2,
      'electronics': 1.5,
      'textile': 1.0,
      'toys': 1.3,
      'construction': 1.1
    }

    const urgencyMultipliers = {
      '1-day': 2.0,
      '3-days': 1.5,
      '7-days': 1.2,
      '14-days': 1.0
    }

    const basePrice = basePrices[calculatorData.documentType as keyof typeof basePrices] || 10000
    const categoryMult = categoryMultipliers[calculatorData.productCategory as keyof typeof categoryMultipliers] || 1.0
    const urgencyMult = urgencyMultipliers[calculatorData.urgency as keyof typeof urgencyMultipliers] || 1.0

    const finalPrice = Math.round(basePrice * categoryMult * urgencyMult)
    setCalculatedPrice(finalPrice)
  }

  useEffect(() => {
    calculatePrice()
  }, [calculatorData])

  const services = [
    {
      title: "–°–µ–ª–ª–µ—Ä—ã",
      description: "–ë—ã—Å—Ç—Ä–∞—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤",
      icon: "Store",
      features: ["–ë–µ–∑ –æ—Ç–∫–∞–∑–æ–≤ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫", "–ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–∏–Ω—è—Ç–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–º", "–î–ª—è –ª—é–±—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤", "–ü–æ–¥ –∫–ª—é—á"]
    },
    {
      title: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–∏", 
      description: "–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏",
      icon: "Factory",
      features: ["–¢–† –¢–°", "–ì–û–°–¢ –†", "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã –∏—Å–ø—ã—Ç–∞–Ω–∏–π", "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"]
    },
    {
      title: "–ò–º–ø–æ—Ä—Ç–µ—Ä—ã",
      description: "–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –≤–≤–æ–∑–∞ –∏ –ø—Ä–æ–¥–∞–∂–∏",
      icon: "Ship",
      features: ["–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–∞–º–æ–∂–Ω–∏", "–î–µ–∫–ª–∞—Ä–∞—Ü–∏–∏", "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã", "–ü–æ–¥–±–æ—Ä –∫–æ–¥–æ–≤ –¢–ù –í–≠–î"]
    }
  ]

  const benefits = [
    { icon: "Clock", title: "–°—Ä–æ–∫–∏ –æ—Ç 1 –¥–Ω—è", description: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è" },
    { icon: "Shield", title: "–¢–æ–ª—å–∫–æ –∞–∫–∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã", description: "–ì–∞—Ä–∞–Ω—Ç–∏—è –∑–∞–∫–æ–Ω–Ω–æ—Å—Ç–∏" },
    { icon: "FileCheck", title: "–†–∞–±–æ—Ç–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É", description: "–ü–æ–ª–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞" },
    { icon: "Zap", title: "–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", description: "–ù–µ –Ω—É–∂–Ω–æ –ø—Ä–∏–µ–∑–∂–∞—Ç—å –≤ –æ—Ñ–∏—Å" }
  ]

  const documents = [
    "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¢–† –¢–°",
    "–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –¢–† –¢–°", 
    "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ì–û–°–¢ –†",
    "–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –ì–û–°–¢ –†",
    "–ü—Ä–æ—Ç–æ–∫–æ–ª—ã –∏—Å–ø—ã—Ç–∞–Ω–∏–π",
    "–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ –æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
    "–û—Ç–∫–∞–∑–Ω—ã–µ –ø–∏—Å—å–º–∞"
  ]

  const stats = [
    { value: 1000, label: "–¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ 2024", suffix: "+" },
    { value: 10, label: "–ª–µ—Ç –æ–ø—ã—Ç–∞", suffix: "+" },
    { value: 98, label: "–∑–∞–∫–∞–∑–æ–≤ –≤ —Å—Ä–æ–∫", suffix: "%" }
  ]

  const reviews = [
    {
      text: "–ö–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ Wildberries –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ –±—ã–ª–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞. –ù–∞—à–ª–∞ —ç—Ç—É –∫–æ–º–ø–∞–Ω–∏—é –ø–æ —Å–æ–≤–µ—Ç—É –∫–æ–ª–ª–µ–≥–∏, –æ—Ñ–æ—Ä–º–∏–ª–∏ –∑–∞ –¥–≤–∞ –¥–Ω—è. –í—Å—ë —É–¥–∞–ª—ë–Ω–Ω–æ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö –±—É–º–∞–≥, —Ç–æ–≤–∞—Ä —Å–Ω–æ–≤–∞ –≤ –ø—Ä–æ–¥–∞–∂–µ.",
      author: "–ê–Ω–Ω–∞ –ö.",
      location: "–ú–æ—Å–∫–≤–∞",
      type: "–°–µ–ª–ª–µ—Ä (Wildberries)"
    },
    {
      text: "–ó–∞–≥—Ä—É–∑–∏–ª –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä –Ω–∞ Ozon, –∏ —Å—Ä–∞–∑—É –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—é. –†–µ–±—è—Ç–∞ —Å–∞–º–∏ –ø–æ–¥–æ–±—Ä–∞–ª–∏ –Ω—É–∂–Ω—É—é, —Å–¥–µ–ª–∞–ª–∏ –±—ã—Å—Ç—Ä–æ, –∞ —è –¥–∞–∂–µ –Ω–µ –æ—Ç–≤–ª–µ–∫–∞–ª—Å—è –æ—Ç —Ä–∞–±–æ—Ç—ã. –£–¥–æ–±–Ω–æ, —á—Ç–æ –≤—Å—ë –æ–Ω–ª–∞–π–Ω.",
      author: "–ò–≥–æ—Ä—å –õ.",
      location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
      type: "–°–µ–ª–ª–µ—Ä (Ozon)"
    },
    {
      text: "–ó–∞–ø—É—Å–∫–∞–ª–∏ –ª–∏–Ω–∏—é –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É —Å–æ—É—Å–æ–≤, –Ω—É–∂–µ–Ω –±—ã–ª –ø–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: –¢–† –¢–°, –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏—Å–ø—ã—Ç–∞–Ω–∏–π, —Ç–µ—Ö–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è. –í—Å—ë —Å–¥–µ–ª–∞–ª–∏ –≤ —Å—Ä–æ–∫, –ø–æ–º–æ–≥–ª–∏ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –±–µ–∑ –∑–∞–º–µ—á–∞–Ω–∏–π.",
      author: "–û–û–û ¬´–ü—Ä–æ–¥—É–∫—Ç-–°–µ—Ä–≤–∏—Å¬ª",
      location: "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
      type: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (–ø–∏—â–µ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è)"
    },
    {
      text: "–í–µ–∑–ª–∏ –ø–∞—Ä—Ç–∏—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –∏–∑ –ö–∏—Ç–∞—è, –Ω–∞ —Ç–∞–º–æ–∂–Ω–µ –ø–æ–ø—Ä–æ—Å–∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã. –ó–¥–µ—Å—å –æ—Ñ–æ—Ä–º–∏–ª–∏ –≤—Å—ë –∑–∞ —Ç—Ä–∏ –¥–Ω—è, –ø–æ–¥–æ–±—Ä–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥ –¢–ù –í–≠–î. –ì—Ä—É–∑ –∑–∞–±—Ä–∞–ª–∏ –±–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫.",
      author: "–ê–ª–µ–∫—Å–µ–π –ú.",
      location: "–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫",
      type: "–ò–º–ø–æ—Ä—Ç–µ—Ä (—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞)"
    },
    {
      text: "–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ç–µ–Ω–¥–µ—Ä–µ —Ç—Ä–µ–±–æ–≤–∞–ª—Å—è –ì–û–°–¢ –† –∏ –ø—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø—ã—Ç–∞–Ω–∏–π. –°–¥–µ–ª–∞–ª–∏ –≤—Å—ë –ø–æ–¥ –∫–ª—é—á, –≤–Ω–µ—Å–ª–∏ –≤ —Ä–µ–µ—Å—Ç—Ä, –ø—Ä–∏—Å–ª–∞–ª–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—ã. –ß—ë—Ç–∫–æ, –±–µ–∑ –∑–∞—Ç—è–≥–∏–≤–∞–Ω–∏—è —Å—Ä–æ–∫–æ–≤.",
      author: "–ò–ü –ö–æ–≤–∞–ª–µ–≤",
      location: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
      type: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã)"
    },
    {
      text: "–ü—Ä–∏—à–ª–æ—Å—å –æ—Ñ–æ—Ä–º–∏—Ç—å –°–ì–† –Ω–∞ –Ω–∞—à—É –ª–∏–Ω–µ–π–∫—É –∫—Ä–∞—Å–æ–∫. –û–±—Ä–∞—Ç–∏–ª—Å—è —Å—é–¥–∞ –ø–æ —Å–æ–≤–µ—Ç—É –∑–Ω–∞–∫–æ–º–æ–≥–æ ‚Äî –ø–æ–º–æ–≥–ª–∏ —Å –æ–±—Ä–∞–∑—Ü–∞–º–∏, —Å–∞–º–∏ –≤—Å—ë —Å–æ–≥–ª–∞—Å–æ–≤–∞–ª–∏, –∞ –º–Ω–µ –æ—Å—Ç–∞–≤–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –±—É–º–∞–≥–∏. –†–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º–∏ –æ–∫–∞–∑–∞–ª–æ—Å—å –ø—Ä–æ—â–µ, —á–µ–º –æ–∂–∏–¥–∞–ª.",
      author: "–°–µ—Ä–≥–µ–π –õ.",
      location: "–°–∞–º–∞—Ä–∞",
      type: "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å (–ª–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è)"
    }
  ]

  const faqItems = [
    {
      question: "–ß–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏?",
      answer: "–í—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞. –ú—ã –ø–æ–¥–±–µ—Ä–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ –¢–ù –í–≠–î/–û–ö–ü–î2 –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é —Ç–æ–≤–∞—Ä–∞."
    },
    {
      question: "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è?",
      answer: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ: –∫–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞/–æ–ø–∏—Å–∞–Ω–∏–µ, –ò–ù–ù/–û–ì–†–ù, –¥–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏/–∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è, –æ–±—Ä–∞–∑—Ü—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏. –°–ø–∏—Å–æ–∫ —É—Ç–æ—á–Ω—è–µ–º –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É."
    },
    {
      question: "–°–∫–æ–ª—å–∫–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç?",
      answer: "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ö–µ–º—ã –∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞. –ö–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, 1‚Äì5 –ª–µ—Ç. –ü–æ–¥–±–µ—Ä–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é —Å—Ö–µ–º—É –ø–æ–¥ –≤–∞—à—É –∑–∞–¥–∞—á—É."
    },
    {
      question: "–ú–æ–∂–Ω–æ –ª–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ?",
      answer: "–î–∞, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ. –ü—Ä–∏–µ–∑–∂–∞—Ç—å –≤ –æ—Ñ–∏—Å –Ω–µ –Ω—É–∂–Ω–æ."
    }
  ]

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –æ—Ç–∑—ã–≤–æ–≤
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentReview((prev) => (prev + 1) % reviews.length)
    }, 4000) // –ö–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã
    
    return () => clearInterval(interval)
  }, [reviews.length])

  // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate')
          }
        })
      },
      { 
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      }
    )

    const animateElements = document.querySelectorAll('.scroll-animate')
    animateElements.forEach((el) => observer.observe(el))

    return () => {
      animateElements.forEach((el) => observer.unobserve(el))
    }
  }, [])

  return (
    <div className="min-h-screen bg-white">
      {/* Header */}
      <header className="bg-white border-b border-gray-200 sticky top-0 z-30 backdrop-blur-sm bg-white/95">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center space-x-2 animate-fade-in-left">
            <img 
              src="https://cdn.poehali.dev/files/0a530161-0435-431a-a1e0-85e903d56514.jpg" 
              alt="–ì–ö –°–µ—Ä—Ç–≠–∫–æ–ü—Ä–æ–º" 
              className="w-8 h-8 rounded-full"
            />
            <h1 className="text-2xl font-bold text-gray-900">–ì–ö –°–µ—Ä—Ç–≠–∫–æ–ü—Ä–æ–º</h1>
          </div>
          <nav className="hidden md:flex space-x-8">
            <a href="#services" className="text-gray-700 hover:text-blue-600 transition-colors">–£—Å–ª—É–≥–∏</a>
            <a href="#benefits" className="text-gray-700 hover:text-blue-600 transition-colors">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞</a>
            <a href="#faq" className="text-gray-700 hover:text-blue-600 transition-colors">FAQ</a>
          </nav>
          <div className="flex space-x-2 animate-fade-in-right">
            <Button 
              variant="outline"
              onClick={() => window.open('https://t.me/SertEcoPromBot', '_blank')}
            >
              <Icon name="Calculator" className="mr-2" size={16} />
              –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
            </Button>
            <Button className="bg-blue-600 hover:bg-blue-700">
            <Icon name="Phone" className="mr-2" size={16} />
            –ü–æ–∑–≤–æ–Ω–∏—Ç—å
          </Button>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-blue-50 via-white to-blue-50 py-20 overflow-hidden">
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
        <div className="absolute inset-0 opacity-20">
          <div className="absolute top-10 left-10 w-32 h-32 bg-blue-300 rounded-full animate-pulse"></div>
          <div className="absolute top-32 right-20 w-20 h-20 bg-blue-400 rounded-full animate-bounce delay-300"></div>
          <div className="absolute bottom-20 left-1/4 w-16 h-16 bg-blue-500 rounded-full animate-pulse delay-500"></div>
          <div className="absolute top-1/2 right-1/3 w-24 h-24 bg-blue-200 rounded-full animate-bounce delay-700"></div>
          <div className="absolute bottom-32 right-10 w-28 h-28 bg-blue-300 rounded-full animate-pulse delay-1000"></div>
          
          {/* –ü–ª–∞–≤–∞—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
          <div className="absolute top-20 left-1/2 transform -translate-x-1/2">
            <div className="w-2 h-2 bg-blue-400 rounded-full animate-float"></div>
          </div>
          <div className="absolute top-40 left-1/3">
            <div className="w-3 h-3 bg-blue-300 rounded-full animate-float-slow"></div>
          </div>
          <div className="absolute bottom-40 right-1/4">
            <div className="w-2 h-2 bg-blue-500 rounded-full animate-float-reverse"></div>
          </div>
        </div>
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <div>
              <Badge className="mb-4 bg-blue-100 text-blue-800 animate-scale-in">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –¢–† –¢–° –∏ –ì–û–°–¢ –†</Badge>
              <h1 className="text-5xl font-bold text-gray-900 mb-6">
                –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
              </h1>
              <p className="text-xl text-gray-600 mb-8">
                –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç 1 –¥–Ω—è.
              </p>
              <div ref={statsRef} className="flex flex-wrap gap-8 mb-8">
                {stats.map((stat, index) => {
                  const AnimatedStat = () => {
                    const count = useCountUp(stat.value, 2000, visibleStats[index])
                    return (
                      <div key={index} className="text-center scroll-animate transform hover:scale-110 transition-all duration-300" style={{ animationDelay: `${index * 0.2}s` }}>
                        <div className="text-4xl font-bold text-blue-600 mb-2">
                          <span className="tabular-nums">{count}</span>
                          <span className="text-blue-500">{stat.suffix}</span>
                        </div>
                        <div className="text-sm text-gray-600 uppercase tracking-wide">{stat.label}</div>
                      </div>
                    )
                  }
                  return <AnimatedStat key={index} />
                })}
              </div>
              <div className="flex flex-col sm:flex-row gap-4 scroll-animate">
                <Button size="lg" className="bg-blue-600 hover:bg-blue-700 hover:scale-105 transition-all">
                  –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á–µ—Ç
                </Button>
                <Button variant="outline" size="lg" onClick={() => setShowChat(true)} className="hover:scale-105 transition-all">
                  <Icon name="MessageCircle" className="mr-2" size={16} />
                  –û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
                </Button>
              </div>
            </div>
            <Card className="p-6 shadow-xl scroll-animate hover:shadow-2xl transition-shadow">
              <h3 className="text-2xl font-semibold mb-4">–ü–æ–ª—É—á–∏—Ç–µ —Ä–∞—Å—á–µ—Ç –∑–∞ 5 –º–∏–Ω—É—Ç</h3>
              <form className="space-y-4" onSubmit={handleFormSubmit}>
                <Input 
                  placeholder="–í–∞—à–µ –∏–º—è" 
                  value={formData.name}
                  onChange={(e) => setFormData({...formData, name: e.target.value})}
                  required
                />
                <Input 
                  placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" 
                  type="tel"
                  value={formData.phone}
                  onChange={(e) => setFormData({...formData, phone: e.target.value})}
                  required
                />
                <Input 
                  placeholder="Email" 
                  type="email"
                  value={formData.email}
                  onChange={(e) => setFormData({...formData, email: e.target.value})}
                  required
                />
                <Textarea 
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–¥—É–∫—Ü–∏—é –∏–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É"
                  value={formData.description}
                  onChange={(e) => setFormData({...formData, description: e.target.value})}
                  required
                />
                <Button type="submit" className="w-full bg-blue-600 hover:bg-blue-700 hover:scale-105 transition-all">
                  –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—á–µ—Ç
                </Button>
              </form>
              <p className="text-xs text-gray-500 mt-4">
                –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </p>
            </Card>
          </div>
        </div>
      </section>

      {/* Services Section */}
      <section id="services" className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16 scroll-animate">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">–î–ª—è –∫–æ–≥–æ —Ä–∞–±–æ—Ç–∞–µ–º</h2>
            <p className="text-xl text-gray-600">–†–µ—à–∞–µ–º –∑–∞–¥–∞—á–∏ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {services.map((service, index) => (
              <Card key={index} className="p-6 hover:shadow-lg transition-all hover:scale-105 scroll-animate" style={{ animationDelay: `${index * 0.2}s` }}>
                <CardContent className="p-0">
                  <Icon name={service.icon} className="text-blue-600 mb-4" size={48} />
                  <h3 className="text-2xl font-semibold mb-2">{service.title}</h3>
                  <p className="text-gray-600 mb-4">{service.description}</p>
                  <ul className="space-y-2">
                    {service.features.map((feature, idx) => (
                      <li key={idx} className="flex items-center text-sm">
                        <Icon name="Check" className="text-green-500 mr-2" size={16} />
                        {feature}
                      </li>
                    ))}
                  </ul>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Problems & Benefits */}
      <section className="py-20">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {/* Problems */}
            <div className="scroll-animate">
              <h2 className="text-3xl font-bold text-red-600 mb-8">–ë–æ–ª–∏ –±–µ–∑ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤</h2>
              <div className="space-y-4">
                {[
                  "–ü–∞—Ä—Ç–∏—è –≥–æ—Ç–æ–≤–∞, –Ω–æ –Ω–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ ‚Äî –ø—Ä–æ—Å—Ç–∞–∏–≤–∞–µ—Ç —Å–∫–ª–∞–¥",
                  "–†–∏—Å–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö",
                  "–°–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å, –∫–∞–∫–æ–π –¥–æ–∫—É–º–µ–Ω—Ç –Ω—É–∂–µ–Ω",
                  "–î–æ–ª–≥–∏–µ —Å—Ä–æ–∫–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                  "–†–∏—Å–∫ –ø–æ–¥–¥–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
                ].map((problem, index) => (
                  <div key={index} className="flex items-start hover:translate-x-2 transition-transform">
                    <Icon name="X" className="text-red-500 mr-3 mt-1" size={16} />
                    <span className="text-gray-700">{problem}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* Benefits */}
            <div className="scroll-animate">
              <h2 className="text-3xl font-bold text-green-600 mb-8">–í—ã–≥–æ–¥—ã —Å –Ω–∞–º–∏</h2>
              <div className="space-y-4">
                {[
                  "–ü–æ–¥–±–æ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ–¥ –ø—Ä–æ–¥—É–∫—Ü–∏—é",
                  "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ ‚Äî –æ—Ç 1 –¥–Ω—è",
                  "–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
                  "–ü–æ–ª–Ω–∞—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å",
                  "–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
                ].map((benefit, index) => (
                  <div key={index} className="flex items-start hover:translate-x-2 transition-transform">
                    <Icon name="Check" className="text-green-500 mr-3 mt-1" size={16} />
                    <span className="text-gray-700">{benefit}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Why Choose Us */}
      <section id="benefits" className="py-20 bg-blue-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16 scroll-animate">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">–ü–æ—á–µ–º—É –Ω–∞–º –¥–æ–≤–µ—Ä—è—é—Ç</h2>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {benefits.map((benefit, index) => (
              <div key={index} className="text-center scroll-animate hover:scale-105 transition-transform" style={{ animationDelay: `${index * 0.1}s` }}>
                <Icon name={benefit.icon} className="text-blue-600 mx-auto mb-4 hover:rotate-12 transition-transform" size={48} />
                <h3 className="text-xl font-semibold mb-2">{benefit.title}</h3>
                <p className="text-gray-600">{benefit.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Documents */}
      <section className="py-20">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16 scroll-animate">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">–î–æ–∫—É–º–µ–Ω—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ–º</h2>
          </div>
          <div className="flex flex-wrap justify-center gap-4 max-w-6xl mx-auto">
            {documents.map((doc, index) => (
              <div key={index} className="bg-white rounded-lg px-6 py-4 shadow-md hover:shadow-lg hover:scale-105 transition-all scroll-animate flex items-center space-x-3" style={{ animationDelay: `${index * 0.1}s` }}>
                <Icon name="FileText" className="text-blue-600 hover:bounce" size={24} />
                <span className="font-semibold text-gray-800 whitespace-nowrap">{doc}</span>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Reviews */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16 scroll-animate">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</h2>
            <p className="text-gray-600 max-w-2xl mx-auto">–†–µ–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ —Ç–æ–º, –∫–∞–∫ –º—ã –ø–æ–º–æ–≥–ª–∏ –∏–º —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏ —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π</p>
          </div>
          {/* –°–ª–∞–π–¥–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ */}
          <div className="relative max-w-4xl mx-auto">
            <div className="overflow-hidden rounded-xl">
              <div 
                className="flex transition-transform duration-500 ease-in-out"
                style={{ transform: `translateX(-${currentReview * 100}%)` }}
              >
                {reviews.map((review, index) => (
                  <div key={index} className="w-full flex-shrink-0 px-4">
                    <Card className="p-8 text-center bg-white shadow-xl border-0">
                      <div className="mb-6">
                        <Icon name="Quote" className="text-blue-600 mx-auto mb-4" size={32} />
                        <p className="text-lg text-gray-700 leading-relaxed italic">"{review.text}"</p>
                      </div>
                      <div className="border-t pt-6">
                        <div className="flex items-center justify-center space-x-4">
                          <div className="text-center">
                            <p className="font-bold text-gray-900 text-lg">{review.author}</p>
                            <p className="text-sm text-gray-500">{review.location}</p>
                          </div>
                        </div>
                        <div className="mt-3">
                          <span className="inline-block bg-blue-100 text-blue-800 text-sm px-3 py-1 rounded-full">
                            {review.type}
                          </span>
                        </div>
                      </div>
                    </Card>
                  </div>
                ))}
              </div>
            </div>
            
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
            <div className="flex justify-center space-x-2 mt-6">
              {reviews.map((_, index) => (
                <button
                  key={index}
                  onClick={() => setCurrentReview(index)}
                  className={`w-3 h-3 rounded-full transition-all duration-300 ${
                    currentReview === index ? 'bg-blue-600 scale-125' : 'bg-gray-300 hover:bg-gray-400'
                  }`}
                />
              ))}
            </div>

            {/* –°—Ç—Ä–µ–ª–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
            <button
              onClick={() => setCurrentReview((prev) => prev === 0 ? reviews.length - 1 : prev - 1)}
              className="absolute left-0 top-1/2 -translate-y-1/2 -translate-x-4 bg-white shadow-lg rounded-full w-12 h-12 flex items-center justify-center hover:bg-gray-50 transition-all duration-300 hover:scale-110"
            >
              <Icon name="ChevronLeft" size={20} className="text-gray-600" />
            </button>
            
            <button
              onClick={() => setCurrentReview((prev) => (prev + 1) % reviews.length)}
              className="absolute right-0 top-1/2 -translate-y-1/2 translate-x-4 bg-white shadow-lg rounded-full w-12 h-12 flex items-center justify-center hover:bg-gray-50 transition-all duration-300 hover:scale-110"
            >
              <Icon name="ChevronRight" size={20} className="text-gray-600" />
            </button>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section id="faq" className="py-20">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16 scroll-animate">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          </div>
          <div className="max-w-3xl mx-auto scroll-animate">
            <Accordion type="single" collapsible>
              {faqItems.map((item, index) => (
                <AccordionItem key={index} value={`item-${index}`} className="hover:bg-white/50 transition-colors rounded-lg px-4">
                  <AccordionTrigger className="text-left hover:no-underline">{item.question}</AccordionTrigger>
                  <AccordionContent className="text-gray-600">{item.answer}</AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div className="scroll-animate">
              <div className="flex items-center space-x-2 mb-4">
                <img 
                  src="https://cdn.poehali.dev/files/0659d6da-acf0-4dd3-9b84-ee6832ab2b4f.jpg" 
                  alt="–ì–ö –°–µ—Ä—Ç–≠–∫–æ–ü—Ä–æ–º Logo" 
                  className="w-8 h-8 rounded-full"
                />
                <h3 className="text-2xl font-bold">–ì–ö –°–µ—Ä—Ç–≠–∫–æ–ü—Ä–æ–º</h3>
              </div>
              <p className="text-gray-400">
                –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏–ª–∏ —Ä–∞—Å—à–∏—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –±–µ–∑ –±—é—Ä–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–µ—Ä–∂–µ–∫
              </p>
            </div>
            <div className="scroll-animate">
              <h4 className="text-lg font-semibold mb-4">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
              <div className="space-y-2">
                <div className="flex items-center hover:text-blue-400 transition-colors cursor-pointer">
                  <Icon name="Phone" className="mr-2" size={16} />
                  <span>+7 9889888559</span>
                </div>
                <div className="flex items-center hover:text-blue-400 transition-colors cursor-pointer">
                  <Icon name="Mail" className="mr-2" size={16} />
                  <span>sertecoprom@yandex.ru</span>
                </div>
              </div>
            </div>
            <div className="scroll-animate">
              <h4 className="text-lg font-semibold mb-4">–ì–∞—Ä–∞–Ω—Ç–∏–∏</h4>
              <ul className="text-gray-400 space-y-1">
                <li>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —Ä–µ–µ—Å—Ç—Ä–µ –§–°–ê</li>
                <li>–†–∞–±–æ—Ç–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É</li>
                <li>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö</li>
                <li>–í–æ–∑–≤—Ä–∞—Ç –ø—Ä–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏–π</li>
              </ul>
            </div>
          </div>
          <div className="border-t border-gray-800 mt-8 pt-6 text-center">
            <p className="text-gray-400 text-sm">
              ¬© 2024 –ì–ö –°–µ—Ä—Ç–≠–∫–æ–ü—Ä–æ–º. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã. | {' '}
              <a 
                href="https://docs.google.com/document/d/19RKw5BdlbItv9b-OctCKNYx3yX6e2GNeH80mRmHY_mM/edit?usp=sharing" 
                target="_blank" 
                rel="noopener noreferrer"
                className="text-blue-400 hover:text-blue-300 transition-colors underline"
              >
                –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </a>
            </p>
          </div>
        </div>
      </footer>

      {/* Floating Contact Button */}
      <div className="fixed bottom-6 right-6 z-50">
        <Button 
          className="rounded-full w-16 h-16 shadow-2xl animate-pulse hover:animate-none transition-all duration-300 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 transform hover:scale-110"
          onClick={() => window.open('tel:+79889888559')}
        >
          <Icon name="Phone" size={24} className="text-white animate-bounce" />
        </Button>
        <div className="absolute -top-12 -left-16 bg-gray-900 text-white text-sm px-3 py-1 rounded-lg opacity-0 hover:opacity-100 transition-opacity duration-300 whitespace-nowrap pointer-events-none">
          –ü–æ–∑–≤–æ–Ω–∏—Ç—å —Å–µ–π—á–∞—Å
        </div>
      </div>

      {/* Floating WhatsApp Button */}
      <div className="fixed bottom-24 right-6 z-50">
        <Button 
          className="rounded-full w-14 h-14 shadow-xl bg-green-500 hover:bg-green-600 transition-all duration-300 transform hover:scale-110"
          onClick={() => window.open('https://wa.me/79889888559?text=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –•–æ—á—É —É–∑–Ω–∞—Ç—å –ø—Ä–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é', '_blank')}
        >
          <Icon name="MessageCircle" size={20} className="text-white" />
        </Button>
      </div>

      {/* Calculator Dialog */}
      <Dialog open={showCalculator} onOpenChange={setShowCalculator}>
        <DialogContent className="max-w-md">
          <DialogHeader>
            <DialogTitle className="flex items-center">
              <Icon name="Calculator" className="mr-2" size={20} />
              –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            </DialogTitle>
          </DialogHeader>
          <div className="space-y-4">
            <div>
              <Label>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞</Label>
              <Select value={calculatorData.documentType} onValueChange={(value) => setCalculatorData({...calculatorData, documentType: value})}>
                <SelectTrigger>
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="cert-tr-ts">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¢–† –¢–°</SelectItem>
                  <SelectItem value="declaration-tr-ts">–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –¢–† –¢–°</SelectItem>
                  <SelectItem value="cert-gost">–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ì–û–°–¢ –†</SelectItem>
                  <SelectItem value="protocol">–ü—Ä–æ—Ç–æ–∫–æ–ª –∏—Å–ø—ã—Ç–∞–Ω–∏–π</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏</Label>
              <Select value={calculatorData.productCategory} onValueChange={(value) => setCalculatorData({...calculatorData, productCategory: value})}>
                <SelectTrigger>
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="food">–ü–∏—â–µ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã</SelectItem>
                  <SelectItem value="electronics">–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞</SelectItem>
                  <SelectItem value="textile">–¢–µ–∫—Å—Ç–∏–ª—å</SelectItem>
                  <SelectItem value="toys">–ò–≥—Ä—É—à–∫–∏</SelectItem>
                  <SelectItem value="construction">–°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div>
              <Label>–°—Ä–æ—á–Ω–æ—Å—Ç—å</Label>
              <Select value={calculatorData.urgency} onValueChange={(value) => setCalculatorData({...calculatorData, urgency: value})}>
                <SelectTrigger>
                  <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="1-day">1 –¥–µ–Ω—å</SelectItem>
                  <SelectItem value="3-days">3 –¥–Ω—è</SelectItem>
                  <SelectItem value="7-days">7 –¥–Ω–µ–π</SelectItem>
                  <SelectItem value="14-days">14 –¥–Ω–µ–π</SelectItem>
                </SelectContent>
              </Select>
            </div>

            {calculatedPrice && (
              <Card className="p-4 bg-blue-50 border-blue-200">
                <div className="text-center">
                  <div className="text-3xl font-bold text-blue-600 mb-2">
                    {calculatedPrice.toLocaleString()} ‚ÇΩ
                  </div>
                  <p className="text-sm text-gray-600">–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</p>
                </div>
              </Card>
            )}

            <div className="space-y-2">
              <Button 
                className="w-full bg-blue-600 hover:bg-blue-700" 
                onClick={() => {
                  sendToTelegram()
                  setShowCalculator(false)
                }}
                disabled={!calculatedPrice}
              >
                <Icon name="Send" className="mr-2" size={16} />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram
              </Button>
              
              <Button 
                variant="outline"
                className="w-full" 
                onClick={() => {
                  setShowCalculator(false)
                  alert('–†–∞—Å—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.')
                }}
                disabled={!calculatedPrice}
              >
                –ü–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç
              </Button>
            </div>
          </div>
        </DialogContent>
      </Dialog>

      {/* Online Chat */}
      {showChat && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4 animate-fade-in-up">
          <Card className="w-full max-w-md animate-scale-in">
            <div className="flex justify-between items-center p-4 border-b">
              <h3 className="font-semibold">–û–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</h3>
              <Button variant="ghost" size="sm" onClick={() => setShowChat(false)}>
                <Icon name="X" size={16} />
              </Button>
            </div>
            <div className="p-4 h-64 overflow-y-auto bg-gray-50">
              <div className="bg-white p-3 rounded-lg mb-3 shadow-sm animate-fade-in-left">
                <p className="text-sm">üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –ø–æ–º–æ–≥—É —Å –≤—ã–±–æ—Ä–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≤–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ü–∏–∏. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å?</p>
              </div>
              {chatMessage && (
                <div className="bg-blue-100 p-3 rounded-lg mb-3 ml-8 animate-fade-in-right">
                  <p className="text-sm">{chatMessage}</p>
                </div>
              )}
            </div>
            <div className="p-4 border-t">
              <div className="flex space-x-2">
                <Input 
                  placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å..." 
                  value={chatMessage}
                  onChange={(e) => setChatMessage(e.target.value)}
                  onKeyPress={(e) => e.key === 'Enter' && setChatMessage('')}
                />
                <Button size="sm" onClick={() => setChatMessage('')}>
                  <Icon name="Send" size={16} />
                </Button>
              </div>
            </div>
          </Card>
        </div>
      )}

      {/* Floating Chat Button */}
      <Button
        className="fixed bottom-6 right-6 rounded-full w-12 h-12 bg-blue-600 hover:bg-blue-700 shadow-lg z-40 hover:scale-110 transition-all animate-bounce"
        onClick={() => setShowChat(true)}
      >
        <Icon name="MessageCircle" size={24} />
      </Button>
    </div>
  )
}

export default Index